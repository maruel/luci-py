{
  "comments": [
    {
      "key": {
        "uuid": "8f14d6b3_77ea98bb",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 509,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2019-10-29T08:28:16Z",
      "side": 1,
      "message": "Add comments why it needs caching here.",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7fcc035_723b5ef6",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 510,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2019-10-29T08:28:16Z",
      "side": 1,
      "message": "Is there a way to enforce \"unique constraint\" to Datastore?\nUsing memcache for \"lock\" may end up with unexpected cache inconsistent issues.",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f72d6f0d_ff5676d2",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 510,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2019-10-29T08:35:41Z",
      "side": 1,
      "message": "Shouldn\u0027t all requests have request_uuid? How are you going to generate request_uuid?",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be148157_9e84bef0",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 510,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-10-29T08:39:47Z",
      "side": 1,
      "message": "We need to change client side too for this. And making this field mandatry sounds good idea if it is done eventually.",
      "parentUuid": "f72d6f0d_ff5676d2",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cca1fa7_43ee61ca",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 510,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-10-29T08:39:47Z",
      "side": 1,
      "message": "\u003e Is there a way to enforce \"unique constraint\" to Datastore?\n\nI don\u0027t think so, we need to handle such constraint in application layer if necessary.\n\n\u003e Using memcache for \"lock\" may end up with unexpected cache inconsistent issues.\n\nWhat do you mean \"lock\"?",
      "parentUuid": "d7fcc035_723b5ef6",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaf3bb42_5849b305",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 510,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2019-10-29T08:51:23Z",
      "side": 1,
      "message": "Please correct me if I\u0027m wrong. If the IDs are about requests, you can generate them on server sides. Or is it about requester IDs?",
      "parentUuid": "be148157_9e84bef0",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03a0a673_276f25ba",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 510,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-10-29T09:03:51Z",
      "side": 1,
      "message": "request_uuid is id that client generates for a single request.\n\nThis will be used for the case when client does retry after they see some failure response from swarming server.",
      "parentUuid": "aaf3bb42_5849b305",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "438e5c9b_3b19a0a5",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 510,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2019-10-29T09:04:24Z",
      "side": 1,
      "message": "Let\u0027t say the server received two same requests from a bot at the very same time.\nAnd after one created a request record but before creating a cache (around line 528), the second one could create a duplicated request because it doesn\u0027t find any caches.\nThat\u0027s the risk of the current implementation.\n\nIn typical relational DB like MySQL PostgreSQL, you can use unique constraint to avoid duplication. But I\u0027m not sure how to do it in NoSQL like Datastore.",
      "parentUuid": "0cca1fa7_43ee61ca",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45437578_caa716cc",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 510,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-10-29T09:22:41Z",
      "side": 1,
      "message": "If we want to avoid such task duplication, we need to do db access in schedule_request as a transaction with check of request_uuid. But that may increase latency of task create request badly.\n\nI hope we don\u0027t need to guarantee such level of idempotency now.",
      "parentUuid": "438e5c9b_3b19a0a5",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbd906bd_6f5aa2db",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 3
      },
      "lineNbr": 513,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2019-10-29T08:28:16Z",
      "side": 1,
      "message": "Log something useful? like the request xxx has already been created... etc",
      "revId": "1ba5ff08635457cc625e9000c38aa36a36f70e2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}