{
  "comments": [
    {
      "key": {
        "uuid": "1e64e08b_a98e6b35",
        "filename": "client/run_isolated.py",
        "patchSetId": 8
      },
      "lineNbr": 564,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2019-11-29T02:21:15Z",
      "side": 1,
      "message": "time.time() - start ?\nOr you could include it in the result json, though.",
      "revId": "64e66bd0b850bb24be9a3d372e3b2f112d2e27f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cc64dee_854d1d86",
        "filename": "client/run_isolated.py",
        "patchSetId": 8
      },
      "lineNbr": 564,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-11-29T07:44:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e64e08b_a98e6b35",
      "revId": "64e66bd0b850bb24be9a3d372e3b2f112d2e27f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a380fcd_93520f46",
        "filename": "client/run_isolated.py",
        "patchSetId": 8
      },
      "lineNbr": 571,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2019-11-29T02:21:15Z",
      "side": 1,
      "message": "nit: I prefer extract some of the codes as a private function for better readability.\n\ndef fetch_and_map(...):\n   if ...:\n     result_json \u003d _fetch_with_go_client(...)\n     \n     # make bundle from result_json\n     \n     return bundle, {...}\n   \n   # old path\n\n   return bundle, {...}",
      "revId": "64e66bd0b850bb24be9a3d372e3b2f112d2e27f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "731c4966_0865a8f8",
        "filename": "client/run_isolated.py",
        "patchSetId": 8
      },
      "lineNbr": 571,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-11-29T07:44:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a380fcd_93520f46",
      "revId": "64e66bd0b850bb24be9a3d372e3b2f112d2e27f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "891c3467_a09aff6b",
        "filename": "client/run_isolated.py",
        "patchSetId": 8
      },
      "lineNbr": 764,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-11-28T15:39:10Z",
      "side": 1,
      "message": "Please add a comment here too:\n\n# If \u0027isolated\u0027 / \u0027isolated.exe\u0027 is present in this directory, it\n# will be used instead of the python implementation.\n\n---\n\nBut personally, I\u0027d prefer to not use presence detection, but instead use a command line flag. So task runner could specify it or not.\nSo you could specify it as the task request in the manifest, it doesn\u0027t need to be in the TaskProperties, it could just a server side toggle as a temporary hack that you return as a bool on pool.\n\nAs a matter of fact, instead of returning a bool, let\u0027s return the package name and version! This way every single task has a clear \"Which CIPD package to use as the isolated client\" which I think what we\u0027ll want on the long term for task_runner too.\n\nI don\u0027t have a strong stance; it\u0027s just that \"happens to be there\" is not really hermetic and reproducible and makes debugging behavior later harder.",
      "revId": "64e66bd0b850bb24be9a3d372e3b2f112d2e27f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d183b8a_2aca4af0",
        "filename": "client/run_isolated.py",
        "patchSetId": 8
      },
      "lineNbr": 764,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-11-29T00:53:28Z",
      "side": 1,
      "message": "\u003e As a matter of fact, instead of returning a bool, let\u0027s return the package name and version!\n\nDo you mean to have flag to specify package name and version? Or suggesting changing type of return value ofsome function?\n\nAlso where are use supposed to specify that in manifest?\nHardcode that in\nhttps://cs.chromium.org/chromium/infra/luci/appengine/swarming/handlers_bot.py?l\u003d637\u0026rcl\u003d538441bc1d0f0e0a379bde520386d8cfcb825e6c",
      "parentUuid": "891c3467_a09aff6b",
      "revId": "64e66bd0b850bb24be9a3d372e3b2f112d2e27f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8932341_32919ffb",
        "filename": "client/run_isolated.py",
        "patchSetId": 8
      },
      "lineNbr": 764,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-11-29T01:28:59Z",
      "side": 1,
      "message": "Yes at this place, so rolling a new version could be done by either luci-config or hardcoding it on the server. I think hardcoding on the server is my preference.\n\nSo yes it\u0027d mean a flag with the package name and version. Preferably also the cipd server URL, right now we\u0027re hardcoding the current one at many places.",
      "parentUuid": "2d183b8a_2aca4af0",
      "revId": "64e66bd0b850bb24be9a3d372e3b2f112d2e27f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06090883_ad39ca0d",
        "filename": "client/run_isolated.py",
        "patchSetId": 8
      },
      "lineNbr": 764,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-11-29T07:44:27Z",
      "side": 1,
      "message": "Added flag, but let me leave TODO for tag in\ncrrev.com/c/1943736",
      "parentUuid": "f8932341_32919ffb",
      "revId": "64e66bd0b850bb24be9a3d372e3b2f112d2e27f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}