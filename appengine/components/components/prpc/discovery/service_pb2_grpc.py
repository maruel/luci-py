# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import service_pb2 as service__pb2


class DiscoveryStub(object):
  """Discovery describes services.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Describe = channel.unary_unary(
        '/discovery.Discovery/Describe',
        request_serializer=service__pb2.Void.SerializeToString,
        response_deserializer=service__pb2.DescribeResponse.FromString,
        )


class DiscoveryServicer(object):
  """Discovery describes services.
  """

  def Describe(self, request, context):
    """Describe returns a list of services and a descriptor.FileDescriptorSet
    that covers them all.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DiscoveryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Describe': grpc.unary_unary_rpc_method_handler(
          servicer.Describe,
          request_deserializer=service__pb2.Void.FromString,
          response_serializer=service__pb2.DescribeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'discovery.Discovery', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
