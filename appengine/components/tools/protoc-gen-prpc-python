#!/usr/bin/env python

import sys

from google.protobuf.compiler import plugin_pb2 as plugin


HEADER_FORMAT = """
# Generated by the pRPC protocol buffer compiler plugin.  DO NOT EDIT!
# source: %s

import google.protobuf
import access_pb2

from google.protobuf import descriptor_pb2
"""


SERVICE_FORMAT = """
%sServiceDescription = descriptor_pb2.ServiceDescriptorProto()
%sServiceDescription.ParseFromString('%s'.decode('hex'))
"""


def generate_code(input):
    fragments = [HEADER_FORMAT % input.name]
    for service in input.service:
        fragments.append(SERVICE_FORMAT % (
            service.name,
            service.name,
            service.SerializeToString().encode('hex'),
        ))
    return '\n'.join(fragments)


def main():
    data = sys.stdin.read()
    req = plugin.CodeGeneratorRequest()
    req.ParseFromString(data)
    res = plugin.CodeGeneratorResponse()
    for input in req.proto_file:
        output = res.file.add(
            name=input.name.replace('.proto', '_prpc_pb2.py'),
            content=generate_code(input),
        )
    sys.stdout.write(res.SerializeToString())


if __name__ == '__main__':
   main()
