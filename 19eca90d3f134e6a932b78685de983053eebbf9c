{
  "comments": [
    {
      "key": {
        "uuid": "b662cd3c_36197d86",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "should LUCI resources ever point to \"project/@default\"? Or should this be discouraged/prevented? I\u0027m thinking about \"All-Projects\" mess in gerrit. Maybe just very big warning signs on \"@default\" that it should be kept as minimal as possible?",
      "range": {
        "startLine": 28,
        "startChar": 32,
        "endLine": 28,
        "endChar": 49
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdd7a413_66fe0055",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "I\u0027m not sure this is needed.",
      "range": {
        "startLine": 29,
        "startChar": 30,
        "endLine": 30,
        "endChar": 21
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18b300d0_35613cf4",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "... or is just ...",
      "range": {
        "startLine": 31,
        "startChar": 26,
        "endLine": 31,
        "endChar": 27
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "308db184_4510a091",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "How does \"or more\" work? Are bindings simply concatenated with duplicate bindings removed?\n\nedit: sounds like \u0027yes\u0027 from reading below; maybe just move this extension line under the rules for populating permission sets.",
      "range": {
        "startLine": 39,
        "startChar": 28,
        "endLine": 39,
        "endChar": 35
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddff082b_3d21471d",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "is there another way? should this be \"only\"?",
      "range": {
        "startLine": 52,
        "startChar": 16,
        "endLine": 52,
        "endChar": 23
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5dcbcec_e0016729",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "Realm names must be unique within a project.",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 65
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01153450_30a55e8d",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "Should we note where the error will occur when a user inevitably does this? e.g. \"The auth service will reject the entirety of config updates which contain cycles\" or something like that.",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 54
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3931d4a_1c11d307",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "WDYT about\n\n  oneof role_type {\n     Role role \u003d 1;\n     string custom_role \u003d 2;\n  }\n\nWhere Role is an enum? This would also solve the predefined role enumeration and documentation problem (i.e. it would be an actual enum)\n\nedit: Or is the intent to have a central realms.cfg file with all the pre-defined roles in the same format as CustomRole below?",
      "range": {
        "startLine": 84,
        "startChar": 41,
        "endLine": 84,
        "endChar": 45
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6eec24b_40ef2421",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "must?",
      "range": {
        "startLine": 87,
        "startChar": 19,
        "endLine": 87,
        "endChar": 25
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd4a33f2_3543ed0f",
        "filename": "appengine/auth_service/proto/realms_config.proto",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "should these be prefixed `luci.\u003cservice\u003e.\u003csubject\u003e.\u003cverb\u003e` to allow for project services at some point down the line?\n\nWhere would different service deployments be distinguished here (thinking about swarming), or is the premise that by the time swarming adopts it we\u0027ll have un-broken its deployment model (so there would be just one production swarming and it knows about luci projects).",
      "range": {
        "startLine": 124,
        "startChar": 5,
        "endLine": 124,
        "endChar": 17
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5fb0142_20616507",
        "filename": "appengine/components/components/auth/proto/realms.proto",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "Could we just require that ALL fields are known? So service implementations, from day 1, would reject Realms messages containing unknown field data?\n\nI suppose there could be a bug where we need to update the interpretation of an existing field, but I would also seriously consider changing the field name/tag number in that case anyway (e.g. \"foo\" -\u003e \"nuanced_foo\").",
      "range": {
        "startLine": 28,
        "startChar": 42,
        "endLine": 28,
        "endChar": 57
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4a046c6_892a6798",
        "filename": "appengine/components/components/auth/proto/realms.proto",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "Actually, what\u0027s the intended purpose of this field? Services are going to internally know the permissions they plan to check for, and the Realm message also has the set of permissions which apply, right?",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 60
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "217c84b2_737b22cb",
        "filename": "appengine/components/components/auth/proto/realms.proto",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "What\u0027s the reason for making this a message (rather than just a string)? Docs?",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 18
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63c44fbc_fb06001f",
        "filename": "appengine/components/components/auth/proto/realms.proto",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-02-13T00:44:11Z",
      "side": 1,
      "message": "I\u0027d drop this as well... I\u0027d also consider just pointing to the Realm message documentation from above to avoid these getting out of sync.",
      "range": {
        "startLine": 87,
        "startChar": 53,
        "endLine": 88,
        "endChar": 59
      },
      "revId": "19eca90d3f134e6a932b78685de983053eebbf9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}