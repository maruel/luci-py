{
  "comments": [
    {
      "key": {
        "uuid": "001029e0_4bdb5e66",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-03-04T01:33:13Z",
      "side": 1,
      "message": "a git commit message usually starts with a single line of subject, then blank line, then the contents of the message. For reference see history of any luci repo.\n\nthis is why CL title is long",
      "revId": "a008aa23f3c89f5544ac2553443db62acbcf5590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98eeef29_f9c67cad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1165234
      },
      "writtenOn": "2019-03-04T02:01:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "001029e0_4bdb5e66",
      "revId": "a008aa23f3c89f5544ac2553443db62acbcf5590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103195e2_184d94bc",
        "filename": "appengine/third_party/gae_ts_mon/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-03-04T01:33:13Z",
      "side": 1,
      "message": "it isn\u0027t gae_ts_mon\u0027s job to fix protobuf package\nplease add this line in https://chromium.googlesource.com/infra/luci/luci-py/+/refs/changes/18/1496618/2/appengine/config_service/main.py#18",
      "revId": "a008aa23f3c89f5544ac2553443db62acbcf5590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b3e04a7_62694310",
        "filename": "appengine/third_party/gae_ts_mon/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1165234
      },
      "writtenOn": "2019-03-04T02:01:32Z",
      "side": 1,
      "message": "Sometimes gae_ts_mon/app.py is the first handler that runs on a new instance - there\u0027s no opportunity for the main.py script to run. This is why we\u0027re only seeing the errors on new instances, and then they settle down after a while.",
      "parentUuid": "103195e2_184d94bc",
      "revId": "a008aa23f3c89f5544ac2553443db62acbcf5590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8990d067_9cd01400",
        "filename": "appengine/third_party/gae_ts_mon/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-03-04T02:13:23Z",
      "side": 1,
      "message": "i don\u0027t follow. app.yaml specifies yaml files specify apps.py. apps.py load main.py. then main.py loads the rest of py files including gae_ts_mon. There is no way gae_ts_mon can load before main.py",
      "parentUuid": "3b3e04a7_62694310",
      "revId": "a008aa23f3c89f5544ac2553443db62acbcf5590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "317575f9_c1f4f6e0",
        "filename": "appengine/third_party/gae_ts_mon/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1165234
      },
      "writtenOn": "2019-03-04T02:57:13Z",
      "side": 1,
      "message": "app.yaml includes gae_ts_mon\u0027s \"include.yaml\" file: https://chromium.googlesource.com/infra/luci/luci-py/+/refs/heads/master/appengine/config_service/app.yaml#61\n\nThis \"include.yaml\" file adds a handler for \"/internal/cron/ts_mon/.*\", which is linked to the script \"gae_ts_mon.app\" https://chromium.googlesource.com/infra/luci/luci-py/+/refs/heads/master/appengine/third_party/gae_ts_mon/include.yaml#1\n\nSo when a new instance spins up, if the first request it gets is for \"/internal/cron/ts_mon/.*\" (ie, the cron job fires, which happens once a minute), then gae_ts_mon/__init__.py is going to be the first application code to run on that instance",
      "parentUuid": "8990d067_9cd01400",
      "revId": "a008aa23f3c89f5544ac2553443db62acbcf5590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c83bc76_bb7a247a",
        "filename": "appengine/third_party/gae_ts_mon/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-03-04T03:26:10Z",
      "side": 1,
      "message": "i see. Here is what happened, I believe:\n\nSome fix_protobuf_package() calls are done at app bootstrap. When done so, there are no flaky behavior like we observed.\nSome calls are made in libs, such as components.config and components.auth. These cause the flaky behavior.\nHere is the full list of calls https://cs.chromium.org/search/?q\u003dfix_protobuf_package+-f:test\u0026sq\u003dpackage:chromium\u0026type\u003dcs\n\nthis CL adds yet anotther fix_protobuf_package() call to a lib (as opposed to app bootstrap). It is not great, but solves the particular instance of the problem. It is a topical solution, an improvement, so LGTM, but at the same it wouldn\u0027t be hard (one CL) to solve the problem once and for all:\n- call fix_protobuf_package() only in bootstrap code\n- remove fix_protobuf_package() calls from libs, such as https://cs.chromium.org/chromium/infra/luci/appengine/components/components/auth/__init__.py?type\u003dcs\u0026q\u003dfix_protobuf_package+-f:test\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d24\n- move gae_ts_mon.app to a separate file. In that file, call fix_protobuf_package(). Update gae_ts_mon\u0027s yaml file to point to the new file.\n\nfeel free to land this. I can make those changes in a separate CL",
      "parentUuid": "317575f9_c1f4f6e0",
      "revId": "a008aa23f3c89f5544ac2553443db62acbcf5590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}