{
  "comments": [
    {
      "key": {
        "uuid": "ba1ef08c_2930bd51",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-09-30T06:49:32Z",
      "side": 1,
      "message": "take this issue?",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bca6c88e_ae358d14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T07:13:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba1ef08c_2930bd51",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db97715_01391302",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T06:11:27Z",
      "side": 1,
      "message": "I cherry picked crrev.com/c/2410541 and confirmed that it doesn\u0027t pass the tests.\nThe error matches with the one I saw.\nhttps://screenshot.googleplex.com/7YEzWXWqUc34VRT\n\nNow we can fix the logic.",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3e55861_cfdcd5c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T06:13:31Z",
      "side": 1,
      "message": "\u003e The error matches with the one I saw.\ntest logs go/paste/5220871112228864",
      "parentUuid": "0db97715_01391302",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19cf0fb5_aeea1c97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T06:25:24Z",
      "side": 1,
      "message": "I came up with 2 options to fix the error.\nMy preference is option2.\n\nWDYT?",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa2fa0e0_c8f142c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-09-30T06:49:32Z",
      "side": 1,
      "message": "I bit prefer option 1 for explicity if notify_requests is not called from many places.",
      "parentUuid": "19cf0fb5_aeea1c97",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ef033c5_36f1e8b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T07:13:10Z",
      "side": 1,
      "message": "Hmm, I see your point..\n\nBut it\u0027s called directly/indirectly in many types of contexts...\nhttps://source.chromium.org/search?q\u003dnotify_requests%20f:swarming%20-f:_test.py%20\u0026ss\u003dchromium\n\nWe would need more tests/assertions in task_scheduler_test.py.\nhttps://source.chromium.org/chromium/infra/infra/+/master:luci/appengine/swarming/server/task_scheduler_test.py;l\u003d817-868\n\nEven if we add tests, I wouldn\u0027t be confident since notify_requests() is mocked there.\nhttps://chromium.googlesource.com/infra/luci/luci-py/+/1010d337cf47f72d942571bdf4c994c5c8ffcd29/appengine/swarming/server/task_scheduler_test.py#813",
      "parentUuid": "aa2fa0e0_c8f142c5",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9394d141_952f7840",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-09-30T07:32:36Z",
      "side": 1,
      "message": "\u003e Hmm, I see your point..\n\u003e \n\u003e But it\u0027s called directly/indirectly in many types of contexts...\n\u003e https://source.chromium.org/search?q\u003dnotify_requests%20f:swarming%20-f:_test.py%20\u0026ss\u003dchromium\n\u003e \n\nDo you say some code path calls notify_request both within transaction and out of transaction?\nIf you don\u0027t have confidence, can we use warning or error instead of assert to verify the argument at first?\n\n\u003e We would need more tests/assertions in task_scheduler_test.py.\n\u003e https://source.chromium.org/chromium/infra/infra/+/master:luci/appengine/swarming/server/task_scheduler_test.py;l\u003d817-868\n\u003e \n\u003e Even if we add tests, I wouldn\u0027t be confident since notify_requests() is mocked there.\n\u003e https://chromium.googlesource.com/infra/luci/luci-py/+/1010d337cf47f72d942571bdf4c994c5c8ffcd29/appengine/swarming/server/task_scheduler_test.py#813\n\nBut we can have `assert ndb.in_transaction() \u003d\u003d transactional` there?",
      "parentUuid": "1ef033c5_36f1e8b8",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84ecc85e_bfe7902c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T07:41:23Z",
      "side": 1,
      "message": "\u003e \u003e Hmm, I see your point..\n\u003e \u003e \n\u003e \u003e But it\u0027s called directly/indirectly in many types of contexts...\n\u003e \u003e https://source.chromium.org/search?q\u003dnotify_requests%20f:swarming%20-f:_test.py%20\u0026ss\u003dchromium\n\u003e \u003e \n\u003e \n\u003e Do you say some code path calls notify_request both within transaction and out of transaction?\n\nWe have both cases inside/outside transaction.\n\n\u003e If you don\u0027t have confidence, can we use warning or error instead of assert to verify the argument at first?\n\u003e \nWe could do that.\n\n\u003e \u003e We would need more tests/assertions in task_scheduler_test.py.\n\u003e \u003e https://source.chromium.org/chromium/infra/infra/+/master:luci/appengine/swarming/server/task_scheduler_test.py;l\u003d817-868\n\u003e \u003e \n\u003e \u003e Even if we add tests, I wouldn\u0027t be confident since notify_requests() is mocked there.\n\u003e \u003e https://chromium.googlesource.com/infra/luci/luci-py/+/1010d337cf47f72d942571bdf4c994c5c8ffcd29/appengine/swarming/server/task_scheduler_test.py#813\n\u003e \n\u003e But we can have `assert ndb.in_transaction() \u003d\u003d transactional` there?\n\nAh, yes we can.",
      "parentUuid": "9394d141_952f7840",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adfccb20_bf97b716",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-09-30T08:00:00Z",
      "side": 1,
      "message": "\u003e \u003e \u003e Hmm, I see your point..\n\u003e \u003e \u003e \n\u003e \u003e \u003e But it\u0027s called directly/indirectly in many types of contexts...\n\u003e \u003e \u003e https://source.chromium.org/search?q\u003dnotify_requests%20f:swarming%20-f:_test.py%20\u0026ss\u003dchromium\n\u003e \u003e \u003e \n\u003e \u003e \n\u003e \u003e Do you say some code path calls notify_request both within transaction and out of transaction?\n\u003e \n\u003e We have both cases inside/outside transaction.\n\u003e \n\nWhich call path for notify_request does that happen?",
      "parentUuid": "84ecc85e_bfe7902c",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ad9e791_0e6a36c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T12:53:40Z",
      "side": 1,
      "message": "This one is called outside transaction.\nhttps://source.chromium.org/chromium/infra/infra/+/master:luci/appengine/swarming/server/task_scheduler.py;l\u003d1234?q\u003df:task_scheduler.py\u0026ss\u003dchromium",
      "parentUuid": "adfccb20_bf97b716",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0dc9b3e_ad0ec9b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-10-01T02:48:06Z",
      "side": 1,
      "message": "I meant to ask whether there is a call path of request_notify which is called both from inside/outside transaction. Is that called from inside transaction too?",
      "parentUuid": "1ad9e791_0e6a36c7",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57a99d2f_2929d883",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-10-01T04:46:17Z",
      "side": 1,
      "message": "I think I didn\u0027t understand the question.\nWhy does that matter?",
      "parentUuid": "e0dc9b3e_ad0ec9b0",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39928ed5_d84cd35e",
        "filename": "appengine/swarming/server/external_scheduler.py",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T06:25:24Z",
      "side": 1,
      "message": "Option1) add an argument \"transactional\" (default False) to specify it at higher level.",
      "range": {
        "startLine": 171,
        "startChar": 75,
        "endLine": 171,
        "endChar": 76
      },
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aa344de_d4a796fc",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1306,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T07:41:23Z",
      "side": 1,
      "message": "I came up with another option.\n\nOption3) specify `skip_root_task_search` flag rather than transactional.\nThis way we can explicitly control if it appends root IDs or not.\n\n(FWIU, if it\u0027s specified explicitly, cross entity group transaction can be executed?)",
      "range": {
        "startLine": 1306,
        "startChar": 26,
        "endLine": 1306,
        "endChar": 45
      },
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d334912_d96b0d5b",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1306,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T12:53:40Z",
      "side": 1,
      "message": "I lean to this option now.\n\nThe flag name can be `append_root_task_id` default to False.",
      "parentUuid": "8aa344de_d4a796fc",
      "range": {
        "startLine": 1306,
        "startChar": 26,
        "endLine": 1306,
        "endChar": 45
      },
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eb71880_c3a062db",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1347,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T06:25:24Z",
      "side": 1,
      "message": "Option2) Change this condition to \"if not ndb.in_transation()\" to skip the logic, rather than specifying expected transactional state.",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1347,
        "endChar": 27
      },
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3419ae7f_4c63d88a",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1347,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T07:41:23Z",
      "side": 1,
      "message": "A major drawback of this option is that we call notify_requests() at Poll API in a blocking way. So it\u0027s more latency sensitive.\n\nhttps://source.chromium.org/chromium/infra/infra/+/master:luci/appengine/swarming/server/task_scheduler.py;l\u003d1234?q\u003df:task_scheduler.py\u0026ss\u003dchromium",
      "parentUuid": "0eb71880_c3a062db",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1347,
        "endChar": 27
      },
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e28dda59_e7b281ba",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1347,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-09-30T08:00:00Z",
      "side": 1,
      "message": "I don\u0027t understand your comment about drawback related to latency. Why calling ndb.in_transation() here has difference from calling ndb.in_transation() in assert?",
      "parentUuid": "3419ae7f_4c63d88a",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1347,
        "endChar": 27
      },
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "787bc7e0_679dcd00",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1347,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-09-30T12:53:40Z",
      "side": 1,
      "message": "\u003ehttps://source.chromium.org/chromium/infra/infra/+/master:luci/appengine/swarming/server/task_scheduler.py;l\u003d1234?q\u003df:task_scheduler.py\u0026ss\u003dchromium\n\nThis code path is outside of transaction. So it would run the root task search below, which takes some time to access Datastore/Memcache.\n\nI realized that the option2 has the same issue.",
      "parentUuid": "e28dda59_e7b281ba",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1347,
        "endChar": 27
      },
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "484ebebe_fa12843d",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1347,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-10-01T02:48:06Z",
      "side": 1,
      "message": "I think that won\u0027t be so large if we stop using while.",
      "parentUuid": "787bc7e0_679dcd00",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1347,
        "endChar": 27
      },
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "637bdb73_88b5cb0d",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1348,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-10-01T02:48:06Z",
      "side": 1,
      "message": "can we use root_run_id/root_task_id of parent task instead of doing path traversal to root?",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bea5460_932adf9c",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1348,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-10-01T04:46:17Z",
      "side": 1,
      "message": "I don\u0027t think TaskRequest entity has those fields.",
      "parentUuid": "637bdb73_88b5cb0d",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dc65c59_84aeb0f2",
        "filename": "appengine/swarming/server/task_request.py",
        "patchSetId": 4
      },
      "lineNbr": 1348,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-10-01T04:48:29Z",
      "side": 1,
      "message": "I meant TaskRequest datastore entity.\nThose fields were added only to TaskRequest proto message because it\u0027s only for BQ data at this moment.\n\nhttps://crrev.com/c/2438344",
      "parentUuid": "9bea5460_932adf9c",
      "revId": "eb06351c68ae8ba69ccf9063ce666af26336c441",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}