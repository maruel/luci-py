{
  "comments": [
    {
      "key": {
        "uuid": "7a48a4e3_3351ab0e",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1375000
      },
      "writtenOn": "2020-06-19T04:23:36Z",
      "side": 1,
      "message": "I\u0027d like to merge this and isolate handler\u0027s in https://cs.chromium.org/chromium/infra/luci/appengine/isolate/handlers_endpoints_v1.py?l\u003d48-60\u0026rcl\u003d60c180568af32d5729caaee08fe5dc5566d9d743, but not sure where to put it. WDYT if we create a //infra/luci/appengine/components/components/auth/identity.py just for this, or is it an overkill?",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "d251239adee550310ebed1d77a49d3694c65be61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b77d068_57cb1d2f",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-06-19T04:26:34Z",
      "side": 1,
      "message": "I\u0027m fine with that, or make auth.require callable like auth.require(acl...., log\u003dTrue)?",
      "parentUuid": "7a48a4e3_3351ab0e",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "d251239adee550310ebed1d77a49d3694c65be61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8258c10d_05c5f133",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-06-19T04:29:56Z",
      "side": 1,
      "message": "\u003e auth.require(acl...., log\u003dTrue)?\nSGTM, otherwise there are hanlders with @auth.public, which don\u0027t require authentication.",
      "parentUuid": "8b77d068_57cb1d2f",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "d251239adee550310ebed1d77a49d3694c65be61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a5a57a5_6f1aa05c",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1375000
      },
      "writtenOn": "2020-06-19T04:42:57Z",
      "side": 1,
      "message": "OK, thanks for the input. Made https://crrev.com/c/2251614",
      "parentUuid": "8258c10d_05c5f133",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "d251239adee550310ebed1d77a49d3694c65be61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c78303f3_8efd2162",
        "filename": "appengine/swarming/handlers_endpoints.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1375000
      },
      "writtenOn": "2020-06-19T08:04:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a5a57a5_6f1aa05c",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "d251239adee550310ebed1d77a49d3694c65be61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6de391d_47ab28d3",
        "filename": "appengine/swarming/handlers_endpoints_test.py",
        "patchSetId": 1
      },
      "lineNbr": 1299,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-06-19T04:25:04Z",
      "side": 1,
      "message": "called_once_with?",
      "range": {
        "startLine": 1299,
        "startChar": 19,
        "endLine": 1299,
        "endChar": 28
      },
      "revId": "d251239adee550310ebed1d77a49d3694c65be61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eee437ec_cf1412cf",
        "filename": "appengine/swarming/handlers_endpoints_test.py",
        "patchSetId": 1
      },
      "lineNbr": 1299,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-06-19T04:31:54Z",
      "side": 1,
      "message": "FWIU, \n\u0027called_once_with\u0027 checks the last call, and expect logging.info to be called only once.",
      "parentUuid": "f6de391d_47ab28d3",
      "range": {
        "startLine": 1299,
        "startChar": 19,
        "endLine": 1299,
        "endChar": 28
      },
      "revId": "d251239adee550310ebed1d77a49d3694c65be61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30081464_fd9802dd",
        "filename": "appengine/swarming/handlers_endpoints_test.py",
        "patchSetId": 1
      },
      "lineNbr": 1299,
      "author": {
        "id": 1375000
      },
      "writtenOn": "2020-06-19T04:42:57Z",
      "side": 1,
      "message": "+1. The existing test uses assert_any_call (we might already have had such a debate once on this)",
      "parentUuid": "eee437ec_cf1412cf",
      "range": {
        "startLine": 1299,
        "startChar": 19,
        "endLine": 1299,
        "endChar": 28
      },
      "revId": "d251239adee550310ebed1d77a49d3694c65be61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e79fa89_e9361e88",
        "filename": "appengine/swarming/handlers_endpoints_test.py",
        "patchSetId": 1
      },
      "lineNbr": 1299,
      "author": {
        "id": 1375000
      },
      "writtenOn": "2020-06-19T08:04:12Z",
      "side": 1,
      "message": "Adding to what has been pointed out:\n\n1. The purpose of this test is to check that \"logging.info\" is called with \"Accessed from ...\", not to check that it is called exactly once with that arg.\n2. Because of 1, if we use any_call and do an extra logging.info in the handler, the test will just fail, for completely unrelated reason.\n\nI will once again refer to go/tott/571. The information we really cared about is the identity, not the string template \"Accessed from ...\". So ideally, we can have a simple mockable logger that accepts an identity, but that is way of an overkill.",
      "parentUuid": "30081464_fd9802dd",
      "range": {
        "startLine": 1299,
        "startChar": 19,
        "endLine": 1299,
        "endChar": 28
      },
      "revId": "d251239adee550310ebed1d77a49d3694c65be61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}