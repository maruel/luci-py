{
  "comments": [
    {
      "key": {
        "uuid": "1b691c94_d31d0e51",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win.py",
        "patchSetId": 10
      },
      "lineNbr": 264,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-06-26T00:44:55Z",
      "side": 1,
      "message": "style nit: I find this more aesthetic:\n\n  major \u003d build_number.split(u\u0027.\u0027, 1)[0]\n  yymm \u003d _WIN10_BUILD_TO_VERSION_MAPPING.get(major)",
      "range": {
        "startLine": 264,
        "startChar": 4,
        "endLine": 264,
        "endChar": 42
      },
      "revId": "02cb22761aa2eeddabfca280543f683a8572da6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80cc0b11_f01ed04b",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win.py",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-06-26T00:44:55Z",
      "side": 1,
      "message": "FTR there\u0027s \"server core\" but I don\u0027t think python would ever work there so it\u0027s fine for now. :)",
      "revId": "02cb22761aa2eeddabfca280543f683a8572da6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2328bb98_aa11021c",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win.py",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1185199
      },
      "writtenOn": "2019-06-26T13:43:26Z",
      "side": 1,
      "message": "Yes, I mentioned that here (see last bullet): https://chromium-review.googlesource.com/c/infra/luci/luci-py/+/1660974/10#message-cf82b556a719ed4b832f6dcf4de2f9d14fcba47e\n\nAFAICT, \"server core\" is just a different installation option for the \u0027server\u0027 \"product_type\". Not sure exactly how we would want to specify that in dimensions, but if someone needs it, they will hopefully have a good idea of what they need.",
      "parentUuid": "80cc0b11_f01ed04b",
      "revId": "02cb22761aa2eeddabfca280543f683a8572da6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f1ae72b_5c4b81b6",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win_test.py",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-06-26T00:08:59Z",
      "side": 1,
      "message": "could you use mock to test behavior of the function in non-windows?",
      "revId": "02cb22761aa2eeddabfca280543f683a8572da6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5edb8ef1_05402cdf",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win_test.py",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1185199
      },
      "writtenOn": "2019-06-26T13:43:26Z",
      "side": 1,
      "message": "Is there an example of that I can follow? Sorry, my Python skills are not great.",
      "parentUuid": "2f1ae72b_5c4b81b6",
      "revId": "02cb22761aa2eeddabfca280543f683a8572da6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c1f9c59_51777b3c",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win_test.py",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2019-06-26T14:01:59Z",
      "side": 1,
      "message": "This is example.\nhttps://cs.chromium.org/chromium/infra/luci/appengine/swarming/swarming_bot/api/os_utilities_test.py?q\u003dmock+file:%5Einfra/luci/appengine/+package:%5Echromium$\u0026dr\u003dCSs\u0026l\u003d57",
      "parentUuid": "5edb8ef1_05402cdf",
      "revId": "02cb22761aa2eeddabfca280543f683a8572da6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d491d8b_1c935b63",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win_test.py",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1185199
      },
      "writtenOn": "2019-06-26T17:03:21Z",
      "side": 1,
      "message": "The auto_stub mock does not allow adding sys.getwindowsversion on Linux.\nhttps://cs.chromium.org/chromium/infra/luci/client/third_party/depot_tools/auto_stub.py\n\nIs there another mock implementation you can suggest?",
      "parentUuid": "3c1f9c59_51777b3c",
      "revId": "02cb22761aa2eeddabfca280543f683a8572da6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e9d84ee_98f65b32",
        "filename": "appengine/swarming/swarming_bot/api/platforms/win_test.py",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-06-26T18:08:31Z",
      "side": 1,
      "message": "auto_stub won\u0027t mock something that doesn\u0027t exist to help catch typos. You can force it by doing this first:\n\n  sys.getwindowsversion \u003d None",
      "parentUuid": "8d491d8b_1c935b63",
      "revId": "02cb22761aa2eeddabfca280543f683a8572da6c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}