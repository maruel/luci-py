{
  "comments": [
    {
      "key": {
        "uuid": "69d93c5f_aae30b5f",
        "filename": "appengine/swarming/proto/api/swarming.proto",
        "patchSetId": 11
      },
      "lineNbr": 805,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-12-20T18:13:48Z",
      "side": 1,
      "message": "from reading this, it is still unclear if this doc talks about tasks in general, or tasks in BQ can also have multiple states? Do we store a history of task result state transitions in BQ, i.e. multiple BQ row per task? L835 seems to suggest the latter?",
      "revId": "8d0d3bae1221f0e3a023bc7af03517288f55690e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a8b1461_93e4d118",
        "filename": "appengine/swarming/proto/api/swarming.proto",
        "patchSetId": 11
      },
      "lineNbr": 805,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-12-20T18:45:19Z",
      "side": 1,
      "message": "General. I\u0027ve removed since it wasn\u0027t relevant here.",
      "parentUuid": "69d93c5f_aae30b5f",
      "revId": "8d0d3bae1221f0e3a023bc7af03517288f55690e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd794ae_4cf7e85b",
        "filename": "appengine/swarming/proto/api/swarming.proto",
        "patchSetId": 11
      },
      "lineNbr": 805,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-12-20T19:08:55Z",
      "side": 1,
      "message": "thanks for removing, but I it is still unclear if there will be multiple BQ rows per task result :) can this be made explicit?",
      "parentUuid": "3a8b1461_93e4d118",
      "revId": "8d0d3bae1221f0e3a023bc7af03517288f55690e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "454151e7_d39569f6",
        "filename": "appengine/swarming/proto/api/swarming.proto",
        "patchSetId": 11
      },
      "lineNbr": 805,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-12-20T19:43:28Z",
      "side": 1,
      "message": "Done. Filed bug too.",
      "parentUuid": "1dd794ae_4cf7e85b",
      "revId": "8d0d3bae1221f0e3a023bc7af03517288f55690e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58acc9d0_2691f41d",
        "filename": "appengine/swarming/proto/api/swarming.proto",
        "patchSetId": 11
      },
      "lineNbr": 806,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-12-20T18:13:48Z",
      "side": 1,
      "message": "this message does not have task request fields, and does not embed TaskRequest, which means users will have to JOIN the two tables. JOINs in BQ are very expensive (copy of one table has to be sent to each node of the other table) and simply does not work after certain size threshold. It seems users will have to JOIN all the time because most of meaningful analysis need both request and result (example: which task slice usually runs in tasks with a requested optional cache)\n\nis this message going to be used for RPCs too?",
      "range": {
        "startLine": 806,
        "startChar": 8,
        "endLine": 806,
        "endChar": 18
      },
      "revId": "8d0d3bae1221f0e3a023bc7af03517288f55690e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceab4478_09b59d29",
        "filename": "appengine/swarming/proto/api/swarming.proto",
        "patchSetId": 11
      },
      "lineNbr": 806,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-12-20T18:45:19Z",
      "side": 1,
      "message": "Yes and yes. I was hoping to use the same message to embed in RPCs and to use as the BQ schema.\n\nI thought about including the request here, I was ambivalent about that. Probably worth doing after all, and for RPC only include if the user asks for.",
      "parentUuid": "58acc9d0_2691f41d",
      "range": {
        "startLine": 806,
        "startChar": 8,
        "endLine": 806,
        "endChar": 18
      },
      "revId": "8d0d3bae1221f0e3a023bc7af03517288f55690e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a41baf9_1b6a1aed",
        "filename": "appengine/swarming/proto/api/swarming.proto",
        "patchSetId": 11
      },
      "lineNbr": 806,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-12-20T19:08:55Z",
      "side": 1,
      "message": "\u003e Probably worth doing after all, and for RPC only include if the user asks for.\n\n\nyeah, with partial responses this makes perfect sense.\nSee https://cs.chromium.org/chromium/infra/luci/appengine/components/components/protoutil/field_masks.py?q\u003dfield_masks\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d1\nand here is conditional loading from datastore\nhttps://cs.chromium.org/chromium/infra/appengine/cr-buildbucket/v2/api.py?q\u003dv2/api\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d127",
      "parentUuid": "ceab4478_09b59d29",
      "range": {
        "startLine": 806,
        "startChar": 8,
        "endLine": 806,
        "endChar": 18
      },
      "revId": "8d0d3bae1221f0e3a023bc7af03517288f55690e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fa6dbb4_9c00b070",
        "filename": "appengine/swarming/proto/api/swarming.proto",
        "patchSetId": 11
      },
      "lineNbr": 810,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2018-12-20T18:13:48Z",
      "side": 1,
      "message": "go/api-style/standard_fields uses present tense: create_time\nso does isolate (https://cs.chromium.org/chromium/infra/luci/appengine/isolate/proto/isolated.proto?type\u003dcs\u0026q\u003df:proto+f:isolate\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d47) and buildbucket\na small diff may be annoying to a user of both tables\n\napplies to fields below too",
      "range": {
        "startLine": 810,
        "startChar": 28,
        "endLine": 810,
        "endChar": 40
      },
      "revId": "8d0d3bae1221f0e3a023bc7af03517288f55690e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4522c166_7d462a6e",
        "filename": "appengine/swarming/proto/api/swarming.proto",
        "patchSetId": 11
      },
      "lineNbr": 810,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2018-12-20T18:45:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6fa6dbb4_9c00b070",
      "range": {
        "startLine": 810,
        "startChar": 28,
        "endLine": 810,
        "endChar": 40
      },
      "revId": "8d0d3bae1221f0e3a023bc7af03517288f55690e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}