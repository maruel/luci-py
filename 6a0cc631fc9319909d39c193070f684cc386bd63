{
  "comments": [
    {
      "key": {
        "uuid": "45f7dd5e_7bf6b914",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 4
      },
      "lineNbr": 1121,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-04-02T06:24:46Z",
      "side": 1,
      "message": "this is redundant paren?",
      "range": {
        "startLine": 1121,
        "startChar": 25,
        "endLine": 1121,
        "endChar": 26
      },
      "revId": "6a0cc631fc9319909d39c193070f684cc386bd63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f895d24_68b342ef",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 4
      },
      "lineNbr": 1121,
      "author": {
        "id": 1375000
      },
      "writtenOn": "2020-04-02T06:32:10Z",
      "side": 1,
      "message": "Good catch. It\u0027s actually intended. Without this paren, `git cl format` forces the entire lambda to be a single line, which then exceeded 80 characters. Alternatively, we can `def` a closure, which way do you prefer?",
      "parentUuid": "45f7dd5e_7bf6b914",
      "range": {
        "startLine": 1121,
        "startChar": 25,
        "endLine": 1121,
        "endChar": 26
      },
      "revId": "6a0cc631fc9319909d39c193070f684cc386bd63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "210258f3_01c86faa",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 4
      },
      "lineNbr": 1121,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-04-02T06:44:34Z",
      "side": 1,
      "message": "Hmm, why not write like\n```\nfor ... in expanded_task_dimensions_flats:\n  yield _refresh_all_BotTaskDimensions_async(...) \n```?",
      "parentUuid": "9f895d24_68b342ef",
      "range": {
        "startLine": 1121,
        "startChar": 25,
        "endLine": 1121,
        "endChar": 26
      },
      "revId": "6a0cc631fc9319909d39c193070f684cc386bd63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea904a97_097fe53b",
        "filename": "appengine/swarming/server/task_queues.py",
        "patchSetId": 4
      },
      "lineNbr": 1121,
      "author": {
        "id": 1375000
      },
      "writtenOn": "2020-04-02T06:49:25Z",
      "side": 1,
      "message": "I believe that will serialize the work here. You need to pass an iterable to yield to make them actually run in parallel. See https://cloud.google.com/appengine/docs/standard/python/ndb/async#parallel_queries_yield",
      "parentUuid": "210258f3_01c86faa",
      "range": {
        "startLine": 1121,
        "startChar": 25,
        "endLine": 1121,
        "endChar": 26
      },
      "revId": "6a0cc631fc9319909d39c193070f684cc386bd63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}