{
  "comments": [
    {
      "key": {
        "uuid": "effe6f30_d5257aed",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-05-20T08:55:17Z",
      "side": 1,
      "message": "not necessary",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "814e928b_885b1006",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-05-21T04:47:12Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "effe6f30_d5257aed",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5afa58ac_6ccf7732",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-05-20T08:55:17Z",
      "side": 1,
      "message": "not necessary",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18251e30_2270d6f0",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-05-21T04:47:12Z",
      "side": 1,
      "message": "removed, but I personally think worth commenting that they are app engine libraries.",
      "parentUuid": "5afa58ac_6ccf7732",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce949755_8bbbb508",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-05-20T08:55:17Z",
      "side": 1,
      "message": "not necessary",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e20a1361_49de6242",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-05-21T04:47:12Z",
      "side": 1,
      "message": "removed, but I personally think worth commenting that they are luci common libraries.",
      "parentUuid": "ce949755_8bbbb508",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdda8b6f_0bd77a6d",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-05-20T08:55:17Z",
      "side": 1,
      "message": "not necessary",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8651559a_83309bcf",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-05-21T04:47:12Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "fdda8b6f_0bd77a6d",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60c2c36a_9cc1aa8f",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 203,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2020-05-21T01:02:39Z",
      "side": 1,
      "message": "this should probably be task_request.realm (is there a test case for this code path)?",
      "range": {
        "startLine": 203,
        "startChar": 11,
        "endLine": 203,
        "endChar": 16
      },
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cc2d6d0_917ea2bb",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 203,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-05-21T04:47:12Z",
      "side": 1,
      "message": "Ah, good catch...\ndidn\u0027t have tests for this path...\nfixed.",
      "parentUuid": "60c2c36a_9cc1aa8f",
      "range": {
        "startLine": 203,
        "startChar": 11,
        "endLine": 203,
        "endChar": 16
      },
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcfb44a5_72c8bfee",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 216,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2020-05-21T01:02:39Z",
      "side": 1,
      "message": "This is still true when using realms. We need the token server to actually generate access tokens. This check should be right after service_accounts.is_service_account(...).",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 216,
        "endChar": 53
      },
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb7d8951_90eaeb51",
        "filename": "appengine/swarming/server/realms.py",
        "patchSetId": 5
      },
      "lineNbr": 216,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-05-21T04:47:12Z",
      "side": 1,
      "message": "Good catch\nI moved after is_service_account(...)",
      "parentUuid": "dcfb44a5_72c8bfee",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 216,
        "endChar": 53
      },
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37fffd20_28d91eb5",
        "filename": "appengine/swarming/server/realms_test.py",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-05-20T08:55:17Z",
      "side": 1,
      "message": "we cannot use TaskRequest here?",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c645eb5a_5911cfd5",
        "filename": "appengine/swarming/server/realms_test.py",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-05-21T04:47:12Z",
      "side": 1,
      "message": "mock.Mock() is easier to mock property methods, which internally computes something.\n\nhttps://source.chromium.org/chromium/infra/infra/+/master:luci/appengine/swarming/server/task_request.py;l\u003d1200?q\u003df:task_request.py\u0026ss\u003dchromium\u0026originalUrl\u003dhttps:%2F%2Fcs.chromium.org%2F",
      "parentUuid": "37fffd20_28d91eb5",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b722665_5219a12f",
        "filename": "appengine/swarming/server/realms_test.py",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-05-21T04:54:43Z",
      "side": 1,
      "message": "Then I\u0027d like only mock max_lifetime_secs, I feel using mocl.Mock for some small object is error-prone",
      "parentUuid": "c645eb5a_5911cfd5",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ae0d54c_f683b171",
        "filename": "appengine/swarming/server/realms_test.py",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-05-21T05:22:15Z",
      "side": 1,
      "message": "\u003e I feel using mocl.Mock for some small object is error-prone\n\nCan you elaborate your concerns with examples?",
      "parentUuid": "4b722665_5219a12f",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b63d4c2a_b204142f",
        "filename": "appengine/swarming/server/realms_test.py",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-05-21T06:24:51Z",
      "side": 1,
      "message": "mock.Mock does not detect any unintentional member access caused by something like typo.\nSo I think we should avoid using Mock just to skip creating some small classes.",
      "parentUuid": "9ae0d54c_f683b171",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8fc8483_885bb2a7",
        "filename": "appengine/swarming/server/realms_test.py",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-05-21T07:38:17Z",
      "side": 1,
      "message": "Looks mock library already provides features for the issue.\nhttps://docs.python.org/3/library/unittest.mock.html#autospeccing\nThis way, you can\u0027t mock properties that don\u0027t exist.\n\nAs suggested in the document, integration testing usually will find those issues.\nBut unfortunately, my CL isn\u0027t checked because the implemented functions are not integrated.",
      "parentUuid": "b63d4c2a_b204142f",
      "revId": "57804cb9c6551f959634d249f7c451d14f5eede4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}