{
  "comments": [
    {
      "key": {
        "uuid": "37fc508f_3f5552c4",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:25:35Z",
      "side": 1,
      "message": "Please call it tools_test.py. Surprised there wasn\u0027t one.",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53353296_86df1fc8",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37fc508f_3f5552c4",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68465cb4_83c6832c",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:25:35Z",
      "side": 1,
      "message": "Instead of keeping track manually, when you mock it you can do:\n\n  self._orig_platform \u003d self.mock(sys, \u0027platform\u0027, \u0027win32\u0027)\n\nso you can still check the original platform in the test cases.",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb526070_73aeba74",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:48:07Z",
      "side": 1,
      "message": "I meant not here, but in the test case below where you need it.",
      "parentUuid": "68465cb4_83c6832c",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f177d00_7dea21c5",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb526070_73aeba74",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a661583_11d0ff55",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:25:35Z",
      "side": 1,
      "message": "tempfile.mkdtemp(prefix\u003d\u0027tools_test\u0027)\n\nabspath is not needed, but realpath is (on macOS).",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "736bd2e4_221095e5",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a661583_11d0ff55",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3e8bcd6_3dc38de1",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:25:35Z",
      "side": 1,
      "message": "This removes the need to keep track of self._orig_access:\n\n  self.mock(os, \u0027access\u0027, lambda path, _: path in self._executables)\n\nbut this requires after line 18:\n\n  # third_party/\n  from depot_tools import auto_stub",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbb6737b_df596273",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3e8bcd6_3dc38de1",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2546f06b_955a8e1c",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:48:07Z",
      "side": 1,
      "message": "That\u0027s a bit magic IMHO. I\u0027d prefer explicit mock in each test case. Otherwise it\u0027s really hard for reader to figure out, there\u0027s no comment about this one has to read all of setUp() to realize. Or better, make a separate class, one mocking \u0027linux2\u0027, the other \u0027win32\u0027.\n\nBecause right now I think this test fails if run on Windows.",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3c2b73b_cf0f36c4",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "documented, tested on windows",
      "parentUuid": "2546f06b_955a8e1c",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c38be2ce_3ab90730",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:48:07Z",
      "side": 1,
      "message": "I\u0027d prefer file_path.rmtree(self.playground)",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daa8db0d_5a361386",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "TIL :)",
      "parentUuid": "c38be2ce_3ab90730",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5273569c_b6c0d2d9",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:25:35Z",
      "side": 1,
      "message": "Do you want to test once when a path is relative? :) That\u0027s a corner case but \"while at it\".",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "538f3ac8_8b818e41",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5273569c_b6c0d2d9",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f14d325_dfc8544a",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:48:07Z",
      "side": 1,
      "message": "This is shorter and IMHO better:\n\n  full \u003d self._abs(*path_toks)\n  d \u003d os.path.dir(full)\n  if not os.path.isdir(d):\n    os.makedirs(d)\n\n  with open(full, \u0027w\u0027) as f:\n    f.write(\u0027hi\u0027)\n\n  return full",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21d9a568_a5f23a17",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f14d325_dfc8544a",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3fd4d5_a03b5fd5",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:48:07Z",
      "side": 1,
      "message": "Why the explicit list() ? So that it doesn\u0027t mutate the original command? If this is a concern maybe you could test this explicitly. I added a comment in tools.py about not mutating the inputs.",
      "range": {
        "startLine": 91,
        "startChar": 8,
        "endLine": 91,
        "endChar": 12
      },
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12098712_ea35dcbf",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "I thought this was a feature of the original code; will change the behavior there as well too.",
      "parentUuid": "ce3fd4d5_a03b5fd5",
      "range": {
        "startLine": 91,
        "startChar": 8,
        "endLine": 91,
        "endChar": 12
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb8647e0_f2c444d4",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-06T00:57:51Z",
      "side": 1,
      "message": "Thanks, that was just a silly oversight.",
      "parentUuid": "12098712_ea35dcbf",
      "range": {
        "startLine": 91,
        "startChar": 8,
        "endLine": 91,
        "endChar": 12
      },
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c14f4f3_36ed0876",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:48:07Z",
      "side": 1,
      "message": "did you mean to mock sys.platform?",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b361a489_645a1644",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c14f4f3_36ed0876",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2491e1e4_80749523",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 135,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:48:07Z",
      "side": 1,
      "message": "Is it really useful? I mean we don\u0027t ever use the function with False, so IMHO the option shouldn\u0027t be added. Less code, but more importantly less tests.",
      "range": {
        "startLine": 135,
        "startChar": 47,
        "endLine": 135,
        "endChar": 67
      },
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "374b86cc_34cd025f",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 135,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2491e1e4_80749523",
      "range": {
        "startLine": 135,
        "startChar": 47,
        "endLine": 135,
        "endChar": 67
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97219393_3e9803b3",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:25:35Z",
      "side": 1,
      "message": "I prefer two lines here.",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b204c78d_b3413f60",
        "filename": "client/tests/find_executable_test.py",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97219393_3e9803b3",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed23f7c9_59ce2055",
        "filename": "client/utils/tools.py",
        "patchSetId": 4
      },
      "lineNbr": 320,
      "author": {
        "id": 1000487
      },
      "writtenOn": "2019-09-05T20:48:07Z",
      "side": 1,
      "message": "We should really not mutate and instead create a new list. That was a bug.\n\nMost of the time we didn\u0027t get this because add_python_cmd() already makes a copy.",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dabed39_69d66681",
        "filename": "client/utils/tools.py",
        "patchSetId": 4
      },
      "lineNbr": 320,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-09-06T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed23f7c9_59ce2055",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "1a7c22c4448da792e6f5a6e424da7139b085e815",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}