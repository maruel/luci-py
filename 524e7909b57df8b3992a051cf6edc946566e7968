{
  "comments": [
    {
      "key": {
        "uuid": "56986729_53e5783a",
        "filename": "appengine/swarming/swarming_bot/api/platforms/osx.py",
        "patchSetId": 3
      },
      "lineNbr": 519,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-07-28T06:03:23Z",
      "side": 1,
      "message": "I think it is better not to ignore exception.",
      "revId": "524e7909b57df8b3992a051cf6edc946566e7968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5c92497_7591c518",
        "filename": "appengine/swarming/swarming_bot/api/platforms/osx.py",
        "patchSetId": 3
      },
      "lineNbr": 519,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-07-28T06:20:18Z",
      "side": 1,
      "message": "I think we don\u0027t want to break bots only for a certain dimension due to errors from subprocess, like other subprocess calls in this file.",
      "parentUuid": "56986729_53e5783a",
      "revId": "524e7909b57df8b3992a051cf6edc946566e7968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a1aed85_d7e15d05",
        "filename": "appengine/swarming/swarming_bot/api/platforms/osx.py",
        "patchSetId": 3
      },
      "lineNbr": 519,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-07-28T06:32:12Z",
      "side": 1,
      "message": "But I think failure of this command execution makes the bot status unreliable anyway?",
      "parentUuid": "a5c92497_7591c518",
      "revId": "524e7909b57df8b3992a051cf6edc946566e7968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbf76292_3395de17",
        "filename": "appengine/swarming/swarming_bot/api/platforms/osx.py",
        "patchSetId": 3
      },
      "lineNbr": 519,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-07-28T06:46:14Z",
      "side": 1,
      "message": "As commented in another thread, system call may do unexpected behavior, which would be self recovered afterward.",
      "parentUuid": "7a1aed85_d7e15d05",
      "revId": "524e7909b57df8b3992a051cf6edc946566e7968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a36ff469_6860680f",
        "filename": "appengine/swarming/swarming_bot/api/platforms/osx.py",
        "patchSetId": 3
      },
      "lineNbr": 520,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-07-28T06:03:23Z",
      "side": 1,
      "message": "could you make this assert?",
      "revId": "524e7909b57df8b3992a051cf6edc946566e7968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4192937e_3cb45485",
        "filename": "appengine/swarming/swarming_bot/api/platforms/osx.py",
        "patchSetId": 3
      },
      "lineNbr": 520,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-07-28T06:20:18Z",
      "side": 1,
      "message": "Are you suggesting to rise an AssertionError and catch in the except?\nOr let it fail?\n\nIt would be better not to fail due to this.\nThe system call may return empty in certain conditions. (I\u0027ve seen similar issue)\n\nMaybe better to leave logs, though.",
      "parentUuid": "a36ff469_6860680f",
      "revId": "524e7909b57df8b3992a051cf6edc946566e7968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbae01fe_1d20a712",
        "filename": "appengine/swarming/swarming_bot/api/platforms/osx.py",
        "patchSetId": 3
      },
      "lineNbr": 520,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-07-28T06:32:12Z",
      "side": 1,
      "message": "\u003e Are you suggesting to rise an AssertionError and catch in the except?\n\u003e Or let it fail?\n\u003e \n\nI\u0027d like to make unexpected output failure, so that we can notice that.\n\n\u003e It would be better not to fail due to this.\n\u003e The system call may return empty in certain conditions. (I\u0027ve seen similar issue)\n\u003e \n\nReally?",
      "parentUuid": "4192937e_3cb45485",
      "revId": "524e7909b57df8b3992a051cf6edc946566e7968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "856de729_cabf8faf",
        "filename": "appengine/swarming/swarming_bot/api/platforms/osx.py",
        "patchSetId": 3
      },
      "lineNbr": 520,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2020-07-28T06:46:14Z",
      "side": 1,
      "message": "\u003e I\u0027d like to make unexpected output failure, so that we can notice that.\n\nCan we report error without stopping the process?\n\n\u003e\u003e The system call may return empty in certain conditions. (I\u0027ve seen similar issue)\n\u003e Really?\n\nIIRC, `system_profiler` returns empty and caused https://crbug.com/1102673.",
      "parentUuid": "bbae01fe_1d20a712",
      "revId": "524e7909b57df8b3992a051cf6edc946566e7968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad0955b6_46475849",
        "filename": "appengine/swarming/swarming_bot/api/platforms/osx.py",
        "patchSetId": 3
      },
      "lineNbr": 520,
      "author": {
        "id": 1161379
      },
      "writtenOn": "2020-07-28T06:54:10Z",
      "side": 1,
      "message": "\u003e \u003e I\u0027d like to make unexpected output failure, so that we can notice that.\n\u003e \n\u003e Can we report error without stopping the process?\n\u003e \n\nI think we only can use on_error.report() for that.\nhttps://source.chromium.org/chromium/infra/infra/+/master:luci/client/utils/on_error.py;l\u003d236;drc\u003d734d4c0af274e7db078b27e1b23eeadc034bacb0?originalUrl\u003dhttps:%2F%2Fcs.chromium.org%2F\n\n\u003e \u003e\u003e The system call may return empty in certain conditions. (I\u0027ve seen similar issue)\n\u003e \u003e Really?\n\u003e \n\u003e IIRC, `system_profiler` returns empty and caused https://crbug.com/1102673.\n\nI see, but I still want to make such unexpected behavior more visible. And I think that shouldn\u0027t happen basically too.",
      "parentUuid": "856de729_cabf8faf",
      "revId": "524e7909b57df8b3992a051cf6edc946566e7968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}